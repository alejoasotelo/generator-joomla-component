// Generated by CoffeeScript 1.7.1

/*
	generator-joomla-component

	index.coffee

	@author Sean

	@note Created on 2014-10-04 by PhpStorm
	@note uses Codoc
	@see https://github.com/coffeedoc/codo
 */

(function() {
  "use strict";
  var JoomlaComponentGenerator, path, yeoman,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  yeoman = require("yeoman-generator");

  path = require("path");


  /*
  	@class ControllerGenerator sub-generator for joomla component controllers
  	@see https://github.com/mklabs/yeoman/wiki/generators coffeescript with yeoman
   */

  module.exports = JoomlaComponentGenerator = (function(_super) {
    __extends(JoomlaComponentGenerator, _super);


    /*
    		@param [Array] args command-line arguments passed in (if any)
    		@param [Array] options any additional options
    		@param [Array] config the yeoman configuration
     */

    function JoomlaComponentGenerator(args, options, config) {
      JoomlaComponentGenerator.__super__.constructor.call(this, args, options, config);
      this.on("end", function() {
        return this.installDependencies({
          skipInstall: options["skip-install"]
        });
      });
      this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, "../package.json")));
    }

    JoomlaComponentGenerator.prototype.askFor = function() {
      var cb, prompts;
      cb = this.async();
      console.log(this.yeoman);
      prompts = [
        {
          name: "description",
          message: "Describe your component",
          "default": "A sample description"
        }, {
          name: "componentName",
          message: "What's the component's name?",
          "default": "default-value"
        }, {
          name: "authorName",
          message: "What's your name?",
          "default": "Author name"
        }, {
          name: "authorEmail",
          message: "What's your e-mail?",
          "default": "email@somedomain.com"
        }, {
          name: "authorURL",
          message: "What's your website?",
          "default": "somedomain.com"
        }, {
          name: "license",
          message: "What's the copyright license?",
          "default": "MIT"
        }, {
          type: "confirm",
          name: "requireManageRights",
          message: "Does your component require admin manage rights to access it?"
        }, {
          type: "confirm",
          name: "legacyJoomla",
          message: "Support Joomla 2.5x with compatibility layer?"
        }
      ];
      return this.prompt(prompts, (function(props) {
        this.description = props.description;
        this.componentName = props.componentName;
        this.authorName = props.authorName;
        this.authorEmail = props.authorEmail;
        this.authorURL = props.authorURL;
        this.license = props.license;
        this.requireManageRights = props.requireManageRights;
        this.legacyJoomla = props.legacyJoomla;
        this.currentDate = this._getCurrentDate();
        return cb();
      }).bind(this));
    };

    JoomlaComponentGenerator.prototype.app = function() {
      this.mkdir("app");
      this.mkdir("app/templates");
      this.template("_package.json", "package.json");
      this.template("_bower.json", "bower.json");
      return this.copy("_gitignore", ".gitignore");
    };

    JoomlaComponentGenerator.prototype._getCurrentDate = function() {
      return new Date().getUTCDate();
    };

    JoomlaComponentGenerator.prototype.projectfiles = function() {
      this.copy("editorconfig", ".editorconfig");
      return this.copy("jshintrc", ".jshintrc");
    };

    JoomlaComponentGenerator.prototype.createConfigFiles = function() {
      this.template("_component-name.xml", this._.slugify(this.componentName) + ".xml");
      this.template("_config.xml", "config.xml");
      return this.template("_access.xml", "access.xml");
    };


    /*
    	Create legacy files for fallback to Joomla 2.5x
     */

    JoomlaComponentGenerator.prototype.createLegacyFallbackFiles = function() {
      if (this.legacyJoomla === true) {
        return this.template("_legacy.php", "legacy.php");
      }
    };

    JoomlaComponentGenerator.prototype.createPHPFiles = function() {
      this.template("_component-name.php", this._.slugify(this.componentName) + ".php");
      return this.template("_router.php", "router.php");
    };

    JoomlaComponentGenerator.prototype.createDatabaseFiles = function() {
      this.template("sql/_install.mysql.utf8.sql", "sql/install.mysql.utf8.sql");
      this.template("sql/_uninstall.mysql.utf8.sql", "sql/uninstall.mysql.utf8.sql");
      return this.template("_install-uninstall.php", "install-uninstall.php");
    };

    JoomlaComponentGenerator.prototype.createLanguageFiles = function() {
      this.template("languages/en-GB/_en-GB.com_component-name.ini", "languages/en-GB/en-GB.com_" + this._.slugify(this.componentName) + ".ini");
      return this.template("languages/en-GB/_en-GB.com_component-name.ini", "languages/en-GB/en-GB.com_" + this._.slugify(this.componentName) + ".sys.ini");
    };

    JoomlaComponentGenerator.prototype.createEmptyMVCFolders = function() {
      var emptyMVCFolders, folderName, _i, _len;
      emptyMVCFolders = ["controllers", "helpers", "models", "sql", "tables", "views"];
      for (_i = 0, _len = emptyMVCFolders.length; _i < _len; _i++) {
        folderName = emptyMVCFolders[_i];
        this.template("_index.html", "" + folderName + "/index.html");
      }
      this.template("_index.html", "index.html");
      this.template("_index.html", "languages/index.html");
      return this.template("_index.html", "languages/en-GB/index.html");
    };

    return JoomlaComponentGenerator;

  })(yeoman.generators.Base);

}).call(this);

//# sourceMappingURL=index.map
